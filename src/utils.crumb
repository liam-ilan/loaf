string_to_list = { str -> <- (map (range (length str)) {index _ -> <- (get str index)}) }
list_to_string = { arr -> <- (reduce arr {accum item _ -> <- (join accum (string item))} "")}

// Split a string on a single char separator.
split = {in sep ->
  arr = (string_to_list in)

  // Reduce list of chars to list of words.
  <- (if (is sep "") {<- arr} {
    <- (reduce arr {acc char _ ->
      last_index = (subtract (length acc) 1)

      <- (if (is char sep) {
        // Add new item to result if we come across a separator.
        <- (insert acc "") 
      } {
        // Else, add char to the last item.
        <- (set acc (insert (get acc last_index) char) last_index)
      })
    } (list ""))
  })
}

// Recursively finds all .crumb files in the current directory
find_crumb_files = {
  res = (split (shell "find . -name \\*.crumb -print") "\n")
  res = (get res 0 (subtract (length res) 1))
  <- res
}